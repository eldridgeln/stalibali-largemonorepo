name: Aqua
on:
  push:
    branches:
      - main
jobs:
  aqua:
    name: Aqua scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
   # setup pipeline enforcer    
      - name: Setup pipeline enforcer
        uses: aquasecurity/pipeline-enforcer-action@main
        with:
          aqua-key: ${{ secrets.AQUA_KEY }}
          aqua-secret: ${{ secrets.AQUA_SECRET }}    

   # Run Aqua Scanner       
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --scanners config,vuln,secret . --sast --reachability
          severity: 'CRITICAL,HIGH,MEDIUM'
          format: 'sarif'
          output: 'trivy-results.sarif'
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable reachability scanning, add: --reachability
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)

       #Upload Trivy scan results 
 #     - name: Upload Trivy scan results to GitHub Security tab
 #       uses: github/codeql-action/upload-sarif@v2
 #       with:
 #         sarif_file: 'trivy-results.sarif'
         
#      - name: Build and push
 #       uses: docker/build-push-action@v3
 #       with:
 #         push: true
 #         tags: "stalibali/supplychainactionworkflow:${{ github.sha }}"
